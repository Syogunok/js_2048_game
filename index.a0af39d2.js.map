{"mappings":"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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar gameField = document.querySelector(\".game-field\");\nvar startButton = document.querySelector(\".start\");\nvar scoreElement = document.querySelector(\".game-score\");\nvar winMessage = document.querySelector(\".message-win\");\nvar loseMessage = document.querySelector(\".message-lose\");\nvar startMessage = document.querySelector(\".message-start\");\nvar grid = [];\nvar score = 0;\nvar gameStarted = false;\nfunction createEmptyGrid() {\n    grid = [];\n    for(var i = 0; i < 4; i++){\n        var row = Array(4).fill(0);\n        grid.push(row);\n    }\n}\nfunction addRandomTile() {\n    var emptyCells = [];\n    for(var i = 0; i < 4; i++){\n        for(var j = 0; j < 4; j++)if (grid[i][j] === 0) emptyCells.push({\n            x: i,\n            y: j\n        });\n    }\n    if (emptyCells.length > 0) {\n        var randomCell = emptyCells[Math.floor(Math.random() * emptyCells.length)];\n        grid[randomCell.x][randomCell.y] = Math.random() > 0.1 ? 2 : 4;\n    }\n}\nfunction updateGameField() {\n    var cells = gameField.querySelectorAll(\".field-cell\");\n    cells.forEach(function(cell, index) {\n        var row = Math.floor(index / 4);\n        var col = index % 4;\n        var value = grid[row][col];\n        cell.textContent = value === 0 ? \"\" : value;\n        cell.className = \"field-cell field-cell--\".concat(value);\n    });\n}\nfunction checkWinCondition() {\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = grid[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var row = _step.value;\n            if (row.includes(2048)) {\n                showWinMessage();\n                return true;\n            }\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    return false;\n}\nfunction showWinMessage() {\n    winMessage.classList.remove(\"hidden\");\n    document.removeEventListener(\"keydown\", handleKeyPress);\n}\nfunction hideStartMessage() {\n    if (!startMessage.classList.contains(\"hidden\")) startMessage.classList.add(\"hidden\");\n}\nstartButton.addEventListener(\"click\", function() {\n    hideStartMessage();\n    startGame();\n});\nfunction checkLoseCondition() {\n    if (hasEmptyCells() || hasAdjacentEqualTiles()) return false;\n    showLoseMessage();\n    return true;\n}\nfunction hasEmptyCells() {\n    return grid.some(function(row) {\n        return row.includes(0);\n    });\n}\nfunction hasAdjacentEqualTiles() {\n    for(var i = 0; i < 4; i++)for(var j = 0; j < 4; j++){\n        if (i < 3 && grid[i][j] === grid[i + 1][j] || j < 3 && grid[i][j] === grid[i][j + 1]) return true;\n    }\n    return false;\n}\nfunction showLoseMessage() {\n    loseMessage.classList.remove(\"hidden\");\n    document.removeEventListener(\"keydown\", handleKeyPress);\n}\nfunction moveLeft() {\n    var _loop = function(i) {\n        var filteredRow = grid[i].filter(function(value) {\n            return value !== 0;\n        });\n        var newRow = [];\n        for(var j = 0; j < filteredRow.length; j++)if (filteredRow[j] === filteredRow[j + 1]) {\n            newRow.push(filteredRow[j] * 2);\n            score += filteredRow[j] * 2;\n            j++;\n            moved = true;\n        } else newRow.push(filteredRow[j]);\n        while(newRow.length < 4)newRow.push(0);\n        if (grid[i].toString() !== newRow.toString()) moved = true;\n        grid[i] = newRow;\n    };\n    var moved = false;\n    for(var i = 0; i < 4; i++)_loop(i);\n    return moved;\n}\nfunction moveRight() {\n    grid.forEach(function(row) {\n        return row.reverse();\n    });\n    var moved = moveLeft();\n    grid.forEach(function(row) {\n        return row.reverse();\n    });\n    return moved;\n}\nfunction moveUp() {\n    grid = transpose(grid);\n    var moved = moveLeft();\n    grid = transpose(grid);\n    return moved;\n}\nfunction moveDown() {\n    grid = transpose(grid);\n    var moved = moveRight();\n    grid = transpose(grid);\n    return moved;\n}\nfunction transpose(matrix) {\n    return matrix[0].map(function(_, colIndex) {\n        return matrix.map(function(row) {\n            return row[colIndex];\n        });\n    });\n}\nfunction handleKeyPress(ev) {\n    var validKeys = [\n        \"ArrowLeft\",\n        \"ArrowRight\",\n        \"ArrowUp\",\n        \"ArrowDown\"\n    ];\n    if (!validKeys.includes(ev.key)) return;\n    var moved = false;\n    switch(ev.key){\n        case \"ArrowLeft\":\n            moved = moveLeft();\n            break;\n        case \"ArrowRight\":\n            moved = moveRight();\n            break;\n        case \"ArrowUp\":\n            moved = moveUp();\n            break;\n        case \"ArrowDown\":\n            moved = moveDown();\n            break;\n    }\n    if (moved) {\n        addRandomTile();\n        updateGameField();\n        scoreElement.textContent = score;\n        if (checkWinCondition() || checkLoseCondition()) return 0;\n    }\n}\nfunction startGame() {\n    score = 0;\n    createEmptyGrid();\n    addRandomTile();\n    addRandomTile();\n    updateGameField();\n    document.addEventListener(\"keydown\", handleKeyPress);\n    startButton.classList.remove(\"start\");\n    startButton.classList.add(\"restart\");\n    startButton.textContent = \"Restart\";\n    winMessage.classList.add(\"hidden\");\n    loseMessage.classList.add(\"hidden\");\n}\nfunction restartGame() {\n    score = 0;\n    scoreElement.textContent = score;\n    createEmptyGrid();\n    addRandomTile();\n    addRandomTile();\n    updateGameField();\n    winMessage.classList.add(\"hidden\");\n    loseMessage.classList.add(\"hidden\");\n}\nstartButton.addEventListener(\"click\", function() {\n    if (gameStarted) restartGame();\n    else {\n        startGame();\n        gameStarted = true;\n    }\n});\n\n//# sourceMappingURL=index.a0af39d2.js.map\n","'use strict';\n\nconst gameField = document.querySelector('.game-field');\nconst startButton = document.querySelector('.start');\nconst scoreElement = document.querySelector('.game-score');\nconst winMessage = document.querySelector('.message-win');\nconst loseMessage = document.querySelector('.message-lose');\nconst startMessage = document.querySelector('.message-start');\n\nlet grid = [];\nlet score = 0;\nlet gameStarted = false;\n\nfunction createEmptyGrid() {\n  grid = [];\n\n  for (let i = 0; i < 4; i++) {\n    const row = Array(4).fill(0);\n\n    grid.push(row);\n  }\n}\n\nfunction addRandomTile() {\n  const emptyCells = [];\n\n  for (let i = 0; i < 4; i++) {\n    for (let j = 0; j < 4; j++) {\n      if (grid[i][j] === 0) {\n        emptyCells.push({ x: i, y: j });\n      }\n    }\n  }\n\n  if (emptyCells.length > 0) {\n    const randomCell =\n      emptyCells[Math.floor(Math.random() * emptyCells.length)];\n\n    grid[randomCell.x][randomCell.y] = Math.random() > 0.1 ? 2 : 4;\n  }\n}\n\nfunction updateGameField() {\n  const cells = gameField.querySelectorAll('.field-cell');\n\n  cells.forEach((cell, index) => {\n    const row = Math.floor(index / 4);\n    const col = index % 4;\n    const value = grid[row][col];\n\n    cell.textContent = value === 0 ? '' : value;\n    cell.className = `field-cell field-cell--${value}`;\n  });\n}\n\nfunction checkWinCondition() {\n  for (const row of grid) {\n    if (row.includes(2048)) {\n      showWinMessage();\n\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction showWinMessage() {\n  winMessage.classList.remove('hidden');\n  document.removeEventListener('keydown', handleKeyPress);\n}\n\nfunction hideStartMessage() {\n  if (!startMessage.classList.contains('hidden')) {\n    startMessage.classList.add('hidden');\n  }\n}\n\nstartButton.addEventListener('click', () => {\n  hideStartMessage();\n  startGame();\n});\n\nfunction checkLoseCondition() {\n  if (hasEmptyCells() || hasAdjacentEqualTiles()) {\n    return false;\n  }\n  showLoseMessage();\n\n  return true;\n}\n\nfunction hasEmptyCells() {\n  return grid.some((row) => row.includes(0));\n}\n\nfunction hasAdjacentEqualTiles() {\n  for (let i = 0; i < 4; i++) {\n    for (let j = 0; j < 4; j++) {\n      if (\n        (i < 3 && grid[i][j] === grid[i + 1][j]) ||\n        (j < 3 && grid[i][j] === grid[i][j + 1])\n      ) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction showLoseMessage() {\n  loseMessage.classList.remove('hidden');\n  document.removeEventListener('keydown', handleKeyPress);\n}\n\nfunction moveLeft() {\n  let moved = false;\n\n  for (let i = 0; i < 4; i++) {\n    const filteredRow = grid[i].filter((value) => value !== 0);\n    const newRow = [];\n\n    for (let j = 0; j < filteredRow.length; j++) {\n      if (filteredRow[j] === filteredRow[j + 1]) {\n        newRow.push(filteredRow[j] * 2);\n        score += filteredRow[j] * 2;\n        j++;\n        moved = true;\n      } else {\n        newRow.push(filteredRow[j]);\n      }\n    }\n\n    while (newRow.length < 4) {\n      newRow.push(0);\n    }\n\n    if (grid[i].toString() !== newRow.toString()) {\n      moved = true;\n    }\n\n    grid[i] = newRow;\n  }\n\n  return moved;\n}\n\nfunction moveRight() {\n  grid.forEach((row) => row.reverse());\n\n  const moved = moveLeft();\n\n  grid.forEach((row) => row.reverse());\n\n  return moved;\n}\n\nfunction moveUp() {\n  grid = transpose(grid);\n\n  const moved = moveLeft();\n\n  grid = transpose(grid);\n\n  return moved;\n}\n\nfunction moveDown() {\n  grid = transpose(grid);\n\n  const moved = moveRight();\n\n  grid = transpose(grid);\n\n  return moved;\n}\n\nfunction transpose(matrix) {\n  return matrix[0].map((_, colIndex) => matrix.map((row) => row[colIndex]));\n}\n\nfunction handleKeyPress(ev) {\n  const validKeys = ['ArrowLeft', 'ArrowRight', 'ArrowUp', 'ArrowDown'];\n\n  if (!validKeys.includes(ev.key)) {\n    return;\n  }\n\n  let moved = false;\n\n  switch (ev.key) {\n    case 'ArrowLeft':\n      moved = moveLeft();\n      break;\n    case 'ArrowRight':\n      moved = moveRight();\n      break;\n    case 'ArrowUp':\n      moved = moveUp();\n      break;\n    case 'ArrowDown':\n      moved = moveDown();\n      break;\n  }\n\n  if (moved) {\n    addRandomTile();\n    updateGameField();\n    scoreElement.textContent = score;\n\n    if (checkWinCondition() || checkLoseCondition()) {\n      return 0;\n    }\n  }\n}\n\nfunction startGame() {\n  score = 0;\n  createEmptyGrid();\n  addRandomTile();\n  addRandomTile();\n  updateGameField();\n  document.addEventListener('keydown', handleKeyPress);\n\n  startButton.classList.remove('start');\n  startButton.classList.add('restart');\n  startButton.textContent = 'Restart';\n  winMessage.classList.add('hidden');\n  loseMessage.classList.add('hidden');\n}\n\nfunction restartGame() {\n  score = 0;\n  scoreElement.textContent = score;\n  createEmptyGrid();\n  addRandomTile();\n  addRandomTile();\n  updateGameField();\n  winMessage.classList.add('hidden');\n  loseMessage.classList.add('hidden');\n}\n\nstartButton.addEventListener('click', () => {\n  if (gameStarted) {\n    restartGame();\n  } else {\n    startGame();\n    gameStarted = true;\n  }\n});\n"],"names":["gameField","document","querySelector","startButton","scoreElement","winMessage","loseMessage","startMessage","grid","score","gameStarted","createEmptyGrid","i","row","Array","fill","push","addRandomTile","emptyCells","j","x","y","length","randomCell","Math","floor","random","updateGameField","cells","querySelectorAll","forEach","cell","index","value","textContent","className","concat","moveLeft","moved","_loop","filteredRow","filter","newRow","toString","moveRight","reverse","transpose","matrix","map","_","colIndex","handleKeyPress","ev","validKeys","includes","key","checkWinCondition","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","classList","remove","removeEventListener","err","return","hasEmptyCells","some","hasAdjacentEqualTiles","startGame","addEventListener","add","contains"],"version":3,"file":"index.a0af39d2.js.map"}